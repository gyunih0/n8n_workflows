{
  "name": "회의녹취록 요약정리 Agent",
  "nodes": [
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -640,
        -64
      ],
      "id": "a76084a3-d1c1-46c9-b037-6b01f34b9840",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hpLKYcMswEIKRkzi",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.assemblyai.com/v2/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -928,
        304
      ],
      "id": "447c3f86-4df5-4e60-a0f2-54a6e947bf67",
      "name": "Assembly AI Upload File",
      "credentials": {
        "httpHeaderAuth": {
          "id": "zfgeZshp3AGNm6MQ",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.assemblyai.com/v2/transcript",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "audio_url",
              "value": "={{ $json.upload_url }}"
            },
            {
              "name": "language_detection",
              "value": "true"
            },
            {
              "name": "speaker_labels",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        304
      ],
      "id": "f61ae6ca-c988-49c9-9d8e-1567453a580c",
      "name": "Assembly AI Transcribe Audio",
      "credentials": {
        "httpHeaderAuth": {
          "id": "zfgeZshp3AGNm6MQ",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.assemblyai.com/v2/transcript/{{ $json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -576,
        304
      ],
      "id": "7f8e23f8-e57c-4227-9c12-b8edf1e4e97f",
      "name": "Assembly AI Get Transcript",
      "credentials": {
        "httpHeaderAuth": {
          "id": "zfgeZshp3AGNm6MQ",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -224,
        384
      ],
      "id": "bab56aa3-2629-44e5-bc92-862a2e13f3bb",
      "name": "Wait",
      "webhookId": "1491cd95-b7c1-47bb-8e97-74f32a376b7f"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        384,
        -16
      ],
      "id": "1898efc6-f68d-40e2-8daa-21a86e4a1a88",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4b9A0wVGSHlfntWd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"mappings\":[\n    {\n      \"transcript_speaker\": \"A\",\n      \"real_speaker\": \"김씨\"\n    },\n    {\n      \"transcript_speaker\": \"B\",\n      \"real_speaker\": \"박씨\"\n    }\n  ],\n  \"reason\":\"추론한 이유\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        608,
        -32
      ],
      "id": "e4d8cb6d-6916-43e6-a617-f115dcdf25ca",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.data }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=# 역할: 한국어 회의록 STT 교정 및 제작 보조 에이전트  \n\n## 목표  \n- STT로 변환된 한국어 회의록에서 발생하는 오인식(동음이의어, 외래어 표기, 띄어쓰기, 축약어 등)을 문맥에 맞게 교정한다.  \n- 구어체·비속어·중복 표현을 정제하여 읽기 쉬운 문장으로 변환한다.  \n- 발언자별 발언 내용을 명확히 구분하여 기록한다.  \n- 필요 시 모호한 구절은 1~3개의 교정 후보를 제시하고 기본 선택안을 표시한다.  \n\n## 입력\n- 한국어 회의록 STT 텍스트\n\n## 작업 지시\n1. **오인식 교정 사전 작성**  \n   - 오인식된 단어나 표현을 찾아 올바른 교정안을 제시하고, 교정 이유를 간단히 설명한다.\n2. **문장 단위 교정 예시 제시**\n   - 원문과 교정문을 5~10개 페어로 작성하여 변환 방식을 보여준다.  \n3. **전체 회의록 교정**  \n   - 발언자별로 누가 어떤 이야기를 했는지 명확히 정리한다.  \n   - 불필요한 구어체·비속어·중복 표현을 제거한다.  \n4. **표현 표준화 적용**  \n   - 약어·고유명은 ChatGPT, Figma, Google Forms, A2A, MCP, B2B 등의 표준 표기를 따른다.  \n5. **모호 구절 처리**  \n   - 1~3개의 후보 교정안을 제시하고 기본 선택안을 표시한다.  \n\n## 체크리스트  \n- 일정·시간 표현 표준화  \n- 약어·고유명 일관성  \n- 불필요한 구어체·비속어 제거  \n- 발언자 구분 명확히 표기\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        224,
        240
      ],
      "id": "fe30c83b-17fa-4551-882c-4e1522e0ad99",
      "name": "STT Correction Chain"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "={\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://example.com/stt-correction.minimal.schema.json\",\n  \"title\": \"STT 회의록 교정 결과\",\n  \"description\": \"STT 회의록 교정 결과를 두 필드(전체 교정된 내용, 각 교정에 대한 근거)로 제공하는 최소 스키마\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"correction_result\": {\n      \"type\": \"string\",\n      \"title\": \"전체 교정된 회의 내용\",\n      \"description\": \"표준 용어 및 표기 정비를 반영한 최종 교정 텍스트 전체\"\n    },\n    \"correction_reason\": {\n      \"type\": \"array\",\n      \"title\": \"각 교정에 대한 근거\",\n      \"description\": \"개별 교정 항목에 대한 상세 근거 목록\",\n      \"items\": {\n        \"type\": \"object\",\n        \"title\": \"교정 근거 항목\",\n        \"description\": \"단일 교정 대상에 대한 매핑과 근거\",\n        \"properties\": {\n          \"target\": {\n            \"type\": \"string\",\n            \"title\": \"교정 대상 단어\",\n            \"description\": \"STT로 잘못 인식되었거나 교정이 필요한 원 단어/구\"\n          },\n          \"result\": {\n            \"type\": \"string\",\n            \"title\": \"교정 된 단어\",\n            \"description\": \"교정 후 권장되는 표준 단어/구\"\n          },\n          \"reason\": {\n            \"type\": \"string\",\n            \"title\": \"교정한 근거\",\n            \"description\": \"발음 유사성, 문맥 적합성, 업계 용례, 표기 규범 등 근거 설명\"\n          }\n        },\n        \"required\": [\"target\", \"result\", \"reason\"],\n        \"additionalProperties\": false\n      },\n      \"minItems\": 0\n    }\n  },\n  \"required\": [\"correction_result\", \"correction_reason\"],\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        416,
        432
      ],
      "id": "a14b365b-6582-4d31-a5f4-b6dea4731db5",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        192,
        432
      ],
      "id": "12542f60-59f7-41a5-b82f-8bf37432a879",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "4b9A0wVGSHlfntWd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\n\nconst utterances = $input.first().json.utterances;\nconst data = utterances.map(({speaker, text}) => ({speaker, text}));\nconst result = [{ data }];\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -96,
        160
      ],
      "id": "97c9012c-6f2a-4c95-b241-968eb9645704",
      "name": "utterances data 추출"
    },
    {
      "parameters": {
        "jsCode": "// const data = $input.first().json.data;\nconst data = $('utterances data 추출').first().json.data\n// 1. speaker 종류를 Set으로 추출\nconst speakers = new Set(data.map(item => item.speaker));\n\n// const mapping = $input.first().json.output.mapping ?? {};\nconst mappingList = $input.first().json.output.mappings\n\n// 2. Map 생성, 매핑 없으면 speaker 값 자체 사용\nconst speakerMap = new Map(\n  [...speakers].map(s => {\n    const match = mappingList.find(m => m.transcript_speaker === s);\n    return [s, match ? match.real_speaker : s];\n  })\n);\n\n\n\n// 매핑 후 즉시 \"화자: 문장\" 라인으로 변환\nconst lines = data.map(({ speaker, text }) => {\n  const name = speakerMap.get(speaker);\n  return `${name}: ${text}`;\n});\n\n// 줄바꿈으로 연결\nconst output = lines.join(\"\\n\");\n\n// n8n 포맷으로 반환\nreturn [{ json: { data: output } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        768,
        -64
      ],
      "id": "6cdeb318-f884-4fcb-9adb-62fd3d2544e7",
      "name": "speaker mapping, data formatting"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Role:\nYou are an agent that identifies and maps which real speaker the speaker in the transcript of the meeting is.\n\n-----------------------------------\nInstructions:\n1) Inputs:\n   - real_speakers: information about real speakers, array of {name, role, email, slackID, discordID}. \n   -  data: Transcript of the meeting (what the speaker and speaker said), array of {speaker, text}.\n\n2) Find the appropriate real speaker by comparing the role of the real speaker and the contents of the transcript of the meeting.\n\n3) Decide the best mapping for each symbolic speaker strictly from evidence in the conversation. Prefer concise paraphrased cues (e.g., “일정 확정”, “타임테이블 정리 지시”, “구글 폼/상세페이지 제작”).\n\n4) If ambiguous, still choose the best-supported single mapping based on role fit.\n\nValidation (hard constraints):\n- The response MUST parse with JSON.parse without any pre/post-processing.\n- Content-Type is application/json and the body is a JSON object, not a string.\n- No leading/trailing text, no markdown, no triple backticks.\n- No extra whitespace around colons inside keys/values beyond standard JSON spacing."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        432,
        -208
      ],
      "id": "5d4ce243-60a6-438b-9c47-7dcc8fffa459",
      "name": "Speaker Mapping",
      "notesInFlow": false,
      "notes": "회의 녹취록 맥락에서 팀원의 역할을 추론하여 화자 분리"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90bd2db2-1336-4ece-9afe-da3e0ab5c09f",
              "name": "real_speakers",
              "value": "=[\n  {\n    \"name\": \"김철수\",\n    \"role\": \"프로젝트 매니저\",\n    \"email\": \"twink7753@naver.com\",\n    \"slackID\": \"\",\n    \"discordID\": \"\"\n  },\n  {\n    \"name\": \"홍길동\",\n    \"role\": \"실무 담당자\",\n    \"email\": \"ggyunih0@gmail.com\",\n    \"slackID\": \"U09G1PF7265\",\n    \"discordID\": \"\"\n  }\n]",
              "type": "array"
            },
            {
              "id": "23155aaa-9103-4b00-80db-f3bbe202afe9",
              "name": "data",
              "value": "={{ $json.data }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        -64
      ],
      "id": "3e2c02d4-bf8e-45f4-9aaf-dde3172ff81b",
      "name": "Set Speaker Info"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "84510898-9c41-4e85-88d2-42f141cb8839",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -384,
        304
      ],
      "id": "bb9f19ca-4a7b-430b-aad4-75d62a2ff4d0",
      "name": "If Completed"
    },
    {
      "parameters": {
        "content": "## WorkFlow 한계점\n1. 회의 참여자 정보를 직접 인원수에 맞게 설정해줘야함.\n2. 화자의 직책(역할)을 기준으로 회의 녹취록에서 화자를 추론하는 한계가 있음.",
        "height": 176,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        -288
      ],
      "typeVersion": 1,
      "id": "e51fd841-cac7-4ed6-bc65-f04506438cf2",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output.correction_result }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# 역할:\n- 회의록을 요약하여 Notion에 작성하는 에이전트\n\n## 작업지시:\n- 주어진 회의록 원문을 아젠다 별로 내용 정리, 액션아이템을 분리하여 요약한다.\n- 제목은 [{{ $now.format('yyyy-MM-dd') }} {메인 아젠다} 회의록] 으로 작성한다.\n- 액션 아이템은 다음의 정보를 포함한다.\n  - description: 액션 아이템 내용\n  - manager: 액션 아이템을 수행해야 되는 담당자. (반드시 한명만 가능하며, 만약 여러명의 경우엔 각각 액션 아이템을 생성한다.)\n  - priority: 우선순위(High, Medium, Low 중 하나)\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        784,
        240
      ],
      "id": "95967e2a-8714-4e2f-b3d8-c3158caf65b7",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "pageId": {
          "__rl": true,
          "value": "276550ec21ee8025a048f3d361ce4d34",
          "mode": "id"
        },
        "title": "=[{{ $now.format('yyyy-MM-dd') }}]{{ $json.output.agendas[0].agenda_title }} 등 논의",
        "simple": false,
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        192,
        704
      ],
      "id": "ea0912b7-0122-4934-ac77-65e290297f48",
      "name": "Create a page",
      "credentials": {
        "notionApi": {
          "id": "gwYdOGFuwmykeNLJ",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{ \n  \"meeting_highlight\": \"전체 요약된 회의 내용\",\n  \"agendas\": [\n    {\n      \"agenda_title\": \"아젠다_1 제목\",\n      \"agenda_desc\": \"아젠다_1 내용\"\n    },\n    {\n      \"agenda_title\": \"아젠다_2 제목\",\n      \"agenda_desc\": \"아젠다_2 내용\"\n    }\n  ],\n  \"action_items\": [\n    {\n      \"description\": \"액션 아이템_1 내용\",\n      \"manager\": \"액션 아이템_1 담당자 이름\",\n      \"priority\": \"우선순위\"\n    },\n    {\n      \"description\": \"액션 아이템_2 내용\",\n      \"manager\": \"액션 아이템_2 담당자 이름\",\n      \"priority\": \"우선순위\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        976,
        432
      ],
      "id": "b072f991-a8aa-441b-8603-0321b5f440d2",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "36b494f5-17b1-452b-aaf6-5d82ca9e7d53",
              "name": "output.agendas",
              "value": "={{ $('AI Agent').item.json.output.agendas }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        384,
        704
      ],
      "id": "83d97ea7-27ff-45a2-a5e6-f514fc6a546f",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "resource": "block",
        "blockId": {
          "__rl": true,
          "value": "={{ $('Create a page').item.json.url }}",
          "mode": "url"
        },
        "blockUi": {
          "blockValues": [
            {
              "type": "heading_3",
              "textContent": "={{ $('Split Out').item.json.agenda_title }}"
            },
            {
              "textContent": "={{ $('Split Out').item.json.agenda_desc }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1008,
        752
      ],
      "id": "f75ed6ff-696e-48d9-ab73-e0c7bd900967",
      "name": "Append a block",
      "credentials": {
        "notionApi": {
          "id": "gwYdOGFuwmykeNLJ",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.agendas",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        592,
        704
      ],
      "id": "e01c5e8b-a95a-48f2-91de-3b1b0bc082c9",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        800,
        704
      ],
      "id": "3e59d26d-28ff-4ca1-8e73-7a2d9a8c388b",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        736,
        432
      ],
      "id": "f590a2a6-5345-4856-a3b9-c6bc41ecfaec",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "4b9A0wVGSHlfntWd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# 역할\n회의 결과를 바탕으로 담당자별 이메일(HTML)과 Slack 메시지(Markdown)를 제작하는 에이전트\n\n# 작업 목표\n- 회의 결과에서 **액션 아이템(action_items)** 을 추출하여 담당자별로 정리한다.\n- 담당자별 이메일(HTML)과 Slack 메시지(Markdown)을 제작한다.\n- Structured Output Parser 형식에 맞게 결과를 반환한다.\n\n# 작업 지침\n1. **출력 형식**\n   - 반드시 아래 JSON 형식을 따른다:\n     {\n       \"email_list\": [\n         {\n           \"email_address\": \"수신자 이메일 주소\",\n           \"email_html\": \"html 형식의 이메일 본문\",\n           \"slack_id\": \"수신자 Slack ID\",\n           \"slack_message\": \"markdown 형식의 메시지\"\n         }\n       ]\n     }\n\n2. **이메일 작성 규칙**\n   - HTML 형식으로 작성한다.\n   - 포함 항목:\n     - 회의 제목(예: 5월 런칭 및 준비 회의 결과)\n     - 회의 요약(meeting_highlight)\n     - 아젠다 요약 리스트\n     - 담당자에게 할당된 액션 아이템 리스트\n     - 후속 안내 문구(“문의사항은 프로젝트 매니저에게 연락해 주세요.”)\n   - 가독성을 위해 `<h1>`, `<h2>`, `<ul><li>` 등의 태그를 적절히 활용한다.\n\n3. **Slack 메시지 작성 규칙**\n   - Markdown 형식으로 작성한다.\n   - 포함 항목:\n     - 간단한 제목(예: `*회의 결과 액션 아이템*`)\n     - 담당자에게 할당된 액션 아이템 목록\n   - Slack ID가 존재하지 않으면 `slack_message` 필드는 빈 문자열로 두거나 생성하지 않는다.\n\n4. **담당자 매핑**\n   - 각 액션 아이템의 `manager`를 기준으로 담당자를 매핑한다.\n   - `real_speakers`에 있는 이메일과 Slack ID를 찾아 연결한다.\n   - 이메일 주소는 반드시 `real_speakers`의 정보를 사용한다.\n\n5. **검증 규칙**\n   - 액션 아이템이 없는 담당자는 출력하지 않는다.\n   - Slack ID가 없으면 Slack 메시지를 생성하지 않는다.\n   - 출력 JSON은 올바른 구조를 유지해야 한다.\n\n# 체크리스트\n- [ ] 이메일은 HTML 형식인가?  \n- [ ] Slack 메시지는 Markdown 형식인가?  \n- [ ] 담당자별 액션 아이템이 정확히 매핑되었는가?  \n- [ ] Slack ID가 없는 경우 메시지가 생략되었는가?  \n- [ ] 최종 출력은 지정된 JSON 구조를 따르는가?  \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        400,
        1088
      ],
      "id": "f2ea56fc-94aa-4e01-9d51-9ad103342f4a",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"msg_list\": [\n    {\n      \"email_address\": \"수신받을 담당자_1 이메일 주소\",\n      \"email_html\": \"html형식의 이메일 본문\",\n      \"slack_id\": \"수신받을 담당자_1 slack ID\",\n      \"slack_message\": \"markdown 형식의 메시지\"\n    },\n    {\n      \"email_address\": \"수신받을 담당자_2 이메일 주소\",\n      \"email_html\": \"html형식의 이메일 본문\",\n      \"slack_id\": \"수신받을 담당자_2 slack ID\",\n      \"slack_message\": \"markdown 형식의 메시지\"\n    },\n    {\n      \"email_address\": \"수신받을 담당자_3 이메일 주소\",\n      \"email_html\": \"html형식의 이메일 본문\",\n      \"slack_id\": \"수신받을 담당자_3 slack ID\",\n      \"slack_message\": \"markdown 형식의 메시지\"\n    }\n  ]\n  \n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        608,
        1312
      ],
      "id": "4dd23af9-2fe1-4f8d-bdcb-857ce132ae2b",
      "name": "Structured Output Parser5"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        368,
        1312
      ],
      "id": "19d41e8c-3dc8-4ab7-8613-e53b3b797107",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "4b9A0wVGSHlfntWd",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d795241-7563-4bd5-819d-e65a28a43c64",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            },
            {
              "id": "a6e013a6-0903-4835-b0c5-1b6a41477fad",
              "name": "real_speakers",
              "value": "={{ $('Set Speaker Info').item.json.real_speakers }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        192,
        1088
      ],
      "id": "da84d2bb-c2eb-4001-aaeb-e02e6440e00a",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        944,
        1104
      ],
      "id": "d98770f4-4b28-49f4-a86e-739051806d34",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.msg_list",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        752,
        1088
      ],
      "id": "3a36e660-32a7-4a6b-ad57-c7a7ae925fe3",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Edit Fields').item.json.email_address }}",
        "subject": "={{ $now.format('yyyy-MM-dd') }} 회의 요약본 & 액션아이템 전달",
        "message": "={{ $('Edit Fields').item.json.email_html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1520,
        1184
      ],
      "id": "4028376a-d788-4959-a68c-a8beec20c175",
      "name": "Send a message1",
      "webhookId": "7da5ad90-85ae-40c3-88ff-bc4fb163a0db",
      "credentials": {
        "gmailOAuth2": {
          "id": "qpFBhhIs4r2JzQr9",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Notion 연동 관련 어려움\n- Notion은 기본적으로 block 단위로 구성되며, 이 때문에 AI Agent로 내용을 잘 작성하기 어려움이 있다.\n- 현재는 정해진 형식으로 작성을 유도하기도 하였고, 노션에 페이지는 생성되었으나 내용이 작성되지 않는 현상을 방지하고자 아젠다별로 loop를 돌며 지정된 형식으로 작성되도록 설계하였음.",
        "height": 288,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -208,
        624
      ],
      "typeVersion": 1,
      "id": "b53f99cd-57be-4647-b415-8098d3147239",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "user",
        "user": {
          "__rl": true,
          "value": "={{ $json.slack_id }}",
          "mode": "id"
        },
        "text": "={{ $json.slack_message }}",
        "otherOptions": {
          "mrkdwn": true
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1328,
        1184
      ],
      "id": "6dd156b5-7a23-4928-9c01-ff6302b75ee6",
      "name": "Send a message",
      "webhookId": "7fea3b48-7da3-4f4a-8b75-d62541748828",
      "credentials": {
        "slackOAuth2Api": {
          "id": "GQ3PDZDSfFocnNo4",
          "name": "Slack account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "911df84c-eb14-4bb0-ba9d-2c0ec657bf56",
              "name": "email_address",
              "value": "={{ $json.email_address }}",
              "type": "string"
            },
            {
              "id": "84b38a61-b33c-4420-a48a-00ea11560abe",
              "name": "email_html",
              "value": "={{ $json.email_html }}",
              "type": "string"
            },
            {
              "id": "14e450cb-e247-4af6-b64d-b17125873c84",
              "name": "slack_id",
              "value": "={{ $json.slack_id }}",
              "type": "string"
            },
            {
              "id": "4f0b631a-73f3-4513-af7f-7ba4e53749ab",
              "name": "slack_message",
              "value": "={{ $json.slack_message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1136,
        1184
      ],
      "id": "4cb67610-07cc-4762-b761-05427aa1b93a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## 1. 회의 녹취록 다운로드",
        "height": 224,
        "width": 272,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        -144
      ],
      "typeVersion": 1,
      "id": "ad495bf3-a1db-4921-8e52-5976806016bf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 2. AssemblyAI Api를 사용하여 transcript 생성",
        "height": 336,
        "width": 1056,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1024,
        128
      ],
      "typeVersion": 1,
      "id": "e7faf673-8d9f-4fce-8bac-f00d925cad28",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## polling",
        "height": 240,
        "width": 304
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        256
      ],
      "typeVersion": 1,
      "id": "5cf608dc-e84c-42d9-b6c1-bdb9b925e9f2",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## 3. 주어진 참여자 정보를 기반으로 화자 분석",
        "height": 416,
        "width": 800,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -288
      ],
      "typeVersion": 1,
      "id": "c5a9dfc6-5b89-461d-8c43-fbe7e7c61403",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## 4. STT 교정",
        "height": 400,
        "width": 464,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        112,
        144
      ],
      "typeVersion": 1,
      "id": "4ecf808f-5407-4e50-87e2-c35cb3b20c65",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## 5. 회의록 요약 정리",
        "height": 400,
        "width": 448,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        688,
        144
      ],
      "typeVersion": 1,
      "id": "b0c42b1a-5a6b-484e-943b-02db7506bdc4",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## 6. 회의 내용 Notion 정리",
        "height": 352,
        "width": 1136
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        112,
        592
      ],
      "typeVersion": 1,
      "id": "30c94111-b562-440e-ada7-ed6a7dc3b0ce",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## 7. 담당자에게 액션 아이템과 회의 내용 전달 (Slack, Email)",
        "height": 448,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        112,
        992
      ],
      "typeVersion": 1,
      "id": "902fc823-c13e-49aa-8866-40ba7395ef22",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1xGDS87GJkunN1NGj8xUQBwKpYUptH7D3",
          "mode": "list",
          "cachedResultName": "meeting",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1xGDS87GJkunN1NGj8xUQBwKpYUptH7D3"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -944,
        -64
      ],
      "id": "a1d646f7-d6d0-4e0a-ad93-b658f9858e9c",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hpLKYcMswEIKRkzi",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "### Trigger: Google Drive에 회의 녹취록 업로드 감지",
        "height": 224,
        "width": 256
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1024,
        -144
      ],
      "typeVersion": 1,
      "id": "38a16fdd-ea83-45b3-8e40-f96c95cab64a",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## WorkFlow 개선 포인트\n1. polling - maximum try cnt 추가",
        "height": 176,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        -80
      ],
      "typeVersion": 1,
      "id": "496a70f3-8f38-474a-9717-9360b99373c4",
      "name": "Sticky Note11"
    }
  ],
  "pinData": {},
  "connections": {
    "Download file": {
      "main": [
        [
          {
            "node": "Assembly AI Upload File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assembly AI Upload File": {
      "main": [
        [
          {
            "node": "Assembly AI Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assembly AI Transcribe Audio": {
      "main": [
        [
          {
            "node": "Assembly AI Get Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assembly AI Get Transcript": {
      "main": [
        [
          {
            "node": "If Completed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Assembly AI Get Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Speaker Mapping",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Speaker Mapping",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "STT Correction Chain": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "STT Correction Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "STT Correction Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "utterances data 추출": {
      "main": [
        [
          {
            "node": "Set Speaker Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "speaker mapping, data formatting": {
      "main": [
        [
          {
            "node": "STT Correction Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Speaker Mapping": {
      "main": [
        [
          {
            "node": "speaker mapping, data formatting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Speaker Info": {
      "main": [
        [
          {
            "node": "Speaker Mapping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Completed": {
      "main": [
        [
          {
            "node": "utterances data 추출",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create a page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a page": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Append a block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append a block": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser5": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8c21aceb-f2ef-41a7-ad2e-f49e4470a45a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "MDngwlUuw7ZppkAX",
  "tags": []
}